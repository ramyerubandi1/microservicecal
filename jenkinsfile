pipeline {
    agent {
        docker {
            image 'docker:latest'
            args '-v /var/run/docker.sock:/var/run/docker.sock'
        }
    }
    environment {
        ECR_REPOSITORY = 'yerubandiram'
        IMAGE_TAG = 'latest'
        AWS_REGION = 'us-west-2'
        ECR_URI = "024848485298.dkr.ecr.${us-west-2}.amazonaws.com/${yerubandiram}"
    }
    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/ramyerubandi1/microservicecal.git'
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${ECR_REPOSITORY}:${IMAGE_TAG}")
                }
            }
        }
        stage('Login to ECR') {
            steps {
                script {
                    // Login to ECR using AWS CLI
                    def ecrLoginCommand = sh(script: "aws ecr get-login-password --region ${AWS_REGION}", returnStdout: true).trim()
                    sh "echo ${ecrLoginCommand} | docker login --username AWS --password-stdin ${ECR_URI}"
                }
            }
        }
        stage('Push Docker Image to ECR') {
            steps {
                script {
                    def imageName = "${ECR_REPOSITORY}:${IMAGE_TAG}"
                    docker.tag(imageName, "${ECR_URI}:${IMAGE_TAG}")
                    docker.push("${ECR_URI}:${IMAGE_TAG}")
                }
            }
        }
    }
    post {
        always {
            cleanWs() // Clean workspace after build
        }
    }
}

